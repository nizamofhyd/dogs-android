ext {
    targetSdkVersion = 34
    minSdkVersion = 28
    compileSdkVersion = 34
    buildToolsVersion = "34.0.0"

    gradleVersion = "8.4.1"
    kotlinVersion = "1.9.24"
    kotlinComposeCompilerVersion = "1.5.14"
    appCompatVersion = "1.4.1"

    kotlinCoroutinesVersion = "1.2.0-alpha"
    materialVersion = "1.3.0"
    composeUIVersion = "1.7.2"
    composeUIToolingVersion = "1.7.0"
    navigationComposeVersion = "2.8.1"
    timberVersion = "5.0.1"
    daggerHiltVersion = "2.48"
    glideVersion = "4.12.0"
    annotationVersion = "1.2.0"
    fragmentKtx = "1.5.2"
    archLifecycleVersion = "2.4.0"
    coilVersion = "2.0.0-rc01"

    //tests
    junitVersion = "1.1.2"
    mockkVersion = "1.13.12"
    kotlinCoroutinesTestVersion = "1.4.1"
    androidXTestCore = "1.0.0"
    androidXTest = "1.1.0"
    archCoreTest = "2.0.0"

    //data
    retrofitVersion = "2.6.0"


    classpaths = [
        gradle: "com.android.tools.build:gradle:${gradleVersion}",
        kotlin: "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}",
        daggerHilt: "com.google.dagger:hilt-android-gradle-plugin:${daggerHiltVersion}"
    ]

    appLibraries = [
        fragmentKtx       : "androidx.fragment:fragment-ktx:${fragmentKtx}",
        lifecycleVMKtx    : "androidx.lifecycle:lifecycle-viewmodel-ktx:${archLifecycleVersion}",
        glide             : "com.github.bumptech.glide:glide:${glideVersion}",
        appCompat         : "androidx.appcompat:appcompat:${appCompatVersion}",
        material          : "com.google.android.material:material:${materialVersion}",
        composeMaterial   : "androidx.compose.material3:material3:${materialVersion}",
        navigationCompose   : "androidx.navigation:navigation-compose:${navigationComposeVersion}",
        composeUI         : "androidx.compose.ui:ui:${composeUIVersion}",
        composePreview    : "androidx.compose.ui:ui-tooling-preview:${composeUIToolingVersion}",
        composeUITooling    : "androidx.compose.ui:ui-tooling:${composeUIToolingVersion}",
        coil              : "io.coil-kt:coil-compose:${coilVersion}"
    ]

    domainLibraries = [

    ]

    dataLibraries = [
        retrofit             : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
        retrofitGsonConverter: "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    ]

    commonLibraries = [
        kotlin                 : "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}",
        kotlinCoroutineCore    : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}",
        kotlinCoroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutinesVersion}",
        dagger                 : "com.google.dagger:hilt-android:${daggerHiltVersion}",
        annotations            : "androidx.annotation:annotation:${annotationVersion}",
        timber                 : "com.jakewharton.timber:timber:${timberVersion}"
    ]

    testLibraries = [
        mockk                  : "io.mockk:mockk:${mockkVersion}",
        coroutinesTest         : "org.jetbrains.kotlinx:kotlinx-coroutines-test:${kotlinCoroutinesTestVersion}",
        kotlinCoroutineCore    : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}",
        kotlinCoroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutinesVersion}",
        archCoreTest           : "androidx.arch.core:core-testing:${archCoreTest}"

    ]

    androidTestLibraries = [
        testcore    : "androidx.test:core:${androidXTestCore}",
        testrunner  : "androidx.test:runner:${androidXTest}",
        testrules   : "androidx.test:rules:${androidXTest}",
        archCoreTest: "androidx.arch.core:core-testing:${archCoreTest}"
    ]

    annotationLibraries = [
        daggerCompiler            : "com.google.dagger:hilt-android-compiler:${daggerHiltVersion}",
        gliderCompiler            : "com.github.bumptech.glide:compiler:${glideVersion}"
    ]
}
